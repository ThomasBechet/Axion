#version 330 core

layout(location = 0) in vec3 in_vertex;
layout(location = 1) in vec2 in_uv;
layout(location = 2) in vec3 in_normal;
layout(location = 3) in vec3 in_color;
layout(location = 4) in vec3 in_tangent;

uniform mat4 transform;

uniform mat4 camera_view;
uniform mat4 camera_projection;

out vec3 normal;
out vec2 uv;
out vec3 fragPos;
out vec3 color;

void main()
{
	gl_Position = camera_projection * camera_view * transform * vec4(in_vertex, 1.0f);
	normal = (transform * vec4(in_normal, 1.0f)).xyz;
	fragPos = vec3(transform * vec4(in_vertex, 1.0));
	color = in_color;
}